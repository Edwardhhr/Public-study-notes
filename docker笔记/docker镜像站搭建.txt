服务端配置：
查看有哪些镜像
docker images
搭建镜像仓库
docker pull registry:latest
查看镜像信息
docker inspect registry(镜像名称)
创建镜像存放目录
mkdir -p registry/data && cd registry
运行容器
docker run -d \
--restart=always \
--name registry \
-p 5000:5000 \
-v ./data:/var/lib/registry \

registry:latest
镜像仓库地址
http://服务器IP:5000/v2/_catalog

测试：
ls data docker/registry/v2/repositories

客户端配置：
vim /etc/docker/daemon.json

{
  "registry-mirrors":
   [
     "https://docker.mirrors.sjtug.sjtu.edu.cn",
      "https://docker.m.daocloud.io",
      "https://noohub.ru",
      "https://huecker.io",
      "https://dockerhub.timeweb.cloud",  
      "https://registry.cn-hangzhou.aliyuncs.com"
   ],
  "insecure-registries" :["自己的服务器IP:8280"]		#修改成自己的服务器IP:端口
}

将镜像重新加载
systemctl daemon-reload && systemctl restart docker

镜像推送:
登录私人dockerhub仓库
docker login 仓库地址(IP加端口或者域名)
重做镜像Tag:
docker tag images:tag 私有docker镜像仓库ip:端口/images:tag
举例：
docker tag cloudreve/cloudreve:latest 镜像仓库ip:8280/mycloudreve:latest
也可：
docker tag cloudreve/cloudreve 镜像仓库ip:8280/mycloudreve
如果是latest可以省略tag部分

推送镜像：
docker push 私有docker镜像仓库ip:端口/images:tag
举例
docker push 镜像仓库ip:8280/mycloudreve
查看docker镜像：
docker images
拉取镜像：
docker pull 私有docker镜像仓库ip:端口/images(镜像名字):tag
删除镜像：
docker rmi 镜像名字(repository)

创建容器
docker create --name 容器名 镜像名
开启容器
docker start 容器名
启动容器
docker run 容器名


# docker update --restart=always 容器名或容器ID
docker update --restart=always <CONTAINER ID>
# 例如将tomcat设为自启动
docker update --restart=always tomcat

# docker update --restart=no 容器名或容器ID
docker update --restart=no <CONTAINER ID>
# 例如取消tomcat的自启动
docker update --restart=no tomcat
